{"version":3,"file":"static/webpack/static/development/pages/blog/[slug].js.9abe7db8934df24adbaa.hot-update.js","sources":["webpack:///./pages/blog/[slug].tsx"],"sourcesContent":["import { NextPage } from 'next';\nimport Head from 'next/head';\nimport matter from 'gray-matter';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport { Tina, TinaCMS } from 'tinacms';\n\nimport Layout from '../../components/Layout';\nimport Section from '../../components/Section';\n\nimport { reformatDate } from '../blog';\n\nimport \"../../styles/prism-theme.css\";\nimport \"../../styles/markdown.css\";\n\ninterface BlogTemplateProps {\n  result: BlogPost;\n}\n\ninterface BlogPost {\n  content: string;\n  data: Data;\n}\n\ninterface Data {\n  title: string;\n  date: string;\n  subtitle: string;\n}\n\nconst Blockquote = styled.blockquote.attrs({\n  className: \"my-8 py-4 px-4 bg-white border-l-2 border-primary-700 text-primary-900 shadow rounded-lg\"\n})``;\n\nconst OrderedList = styled.ol.attrs({\n  className: \"list-disc bg-white text-primary-900 my-6 py-4 pl-12 pr-6 rounded-lg shadow\"\n})``;\n\nconst Code = styled.code`\n  font-size: 90%;\n  line-height: 1.2em;\n  font-family: Monaco, Consolas, \"Andale Mono\", \"DejaVu Sans Mono\", monospace;\n\n  display: inline; \n  color: #555555;\n  padding: 1em 1em;\n  background: #f4f4f4;\n`;\n\nconst Pre = styled.pre`\n  text-align: left;\n  margin: 1em 0;\n  padding: 0.5em;\n  overflow-x: auto;\n  border-radius: 3px;\n\n  & .token-line {\n    line-height: 1.3em;\n    height: 1.3em;\n  }\n  font-family: 'Courier New', Courier, monospace;\n`;\n\nconst BlogTemplate: NextPage<BlogTemplateProps> = ({ result }) => {\n  // data from getInitialProps\n  const markdownBody = result.content\n  const frontmatter = result.data\n\n  const cms = new TinaCMS({});\n  return (\n    <Tina cms={cms}>\n      <Layout>\n        <Head>\n          <meta name=\"description\" content=\"About me, my projects, and my blog\"/>\n          <title>{frontmatter.title}</title>\n        </Head>\n        <Section>\n          <article className=\"mb-10 markdown\">\n            <header>\n              <h1 className=\"text-5xl\">{frontmatter.title}</h1>\n            </header>\n            <div className=\"mb-5 my-auto text-sm font-semibold text-neutral-400\">\n                {reformatDate(frontmatter.date)}\n              </div>\n            <div>\n              <ReactMarkdown \n                source={markdownBody}\n                renderers={{\n                  blockquote: Blockquote,\n                  pre: Pre,\n                  list: OrderedList\n                }}\n              />\n            </div>\n          </article>\n        </Section>\n      </Layout>\n    </Tina>\n  )\n};\n\nBlogTemplate.getInitialProps = async ctx => {\n  // ctx contains the query param\n  const { slug } = ctx.query\n  // grab the file in the posts dir based on the slug\n  const content = await import(`../../posts/${slug}.md`);\n  // also grab the config file so we can pass down siteTitle\n  //const config = await import(`../../data/config.json`)\n  //gray-matter parses the yaml frontmatter from the md body\n  const result = matter(content.default)\n  console.log(\"result:\", result)\n  return {\n    result: {\n      content: result.content,\n      data: {\n        title: result.data.title,\n        date: result.data.date,\n        subtitle: result.data.subtitle\n      }\n    }\n  }\n}\n\nexport default BlogTemplate;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAiBA;AACA;AADA;AAIA;AACA;AADA;AAIA;AAWA;AACA;AAaA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AADA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAqBA;;;;A","sourceRoot":""}